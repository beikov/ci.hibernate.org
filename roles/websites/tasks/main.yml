---

- name: Authorize an SSH keys for CI jobs to publish the website
  copy: src=authorized_keys dest=/home/jenkins/.ssh/authorized_keys mode=0600 owner=jenkins group=jenkins
  tags:
    - jenkins

- name: Install the latest version of Apache HTTPD, using dnf
  dnf: name=httpd state=latest

- name: Make sure the example welcome page from HTTPD is removed
  file: path=/etc/httpd/conf.d/{{ item }} state=absent
  with_items:
    - autoindex.conf
    - userdir.conf
    - welcome.conf

- name: Create httpd home for in.relation.to
  file: path=/var/www/in.relation.to owner=jenkins group=jenkins mode=0755 state=directory

- name: Create httpd home for staging.in.relation.to
  file: path=/var/www/staging-in.relation.to owner=jenkins group=jenkins mode=0755 state=directory
  tags: staging

- name: Create httpd home for staging.hibernate.org
  file: path=/var/www/staging-hibernate.org owner=jenkins group=jenkins mode=0755 state=directory
  tags: staging

- name: Create httpd home for staging.beanvalidation.org
  file: path=/var/www/staging-beanvalidation.org owner=jenkins group=jenkins mode=0755 state=directory
  tags: staging

- name: Add a minimal, default index.html (in.relation.to)
  copy: src=var/www/in.relation.to/basic-index.html dest=/var/www/in.relation.to/index.html owner=jenkins group=jenkins mode=0666 force=no

- name: Add a minimal, default index.html (staging.in.relation.to)
  copy: src=var/www/staging-in.relation.to/basic-index.html dest=/var/www/staging-in.relation.to/index.html owner=jenkins group=jenkins mode=0666 force=no
  tags: staging

- name: Add a minimal, default index.html (staging.hibernate.org)
  copy: src=var/www/staging-hibernate.org/basic-index.html dest=/var/www/staging-hibernate.org/index.html owner=jenkins group=jenkins mode=0666 force=no

- name: Add a minimal, default index.html (staging.beanvalidation.org)
  copy: src=var/www/staging-beanvalidation.org/basic-index.html dest=/var/www/staging-hibernate.org/index.html owner=jenkins group=jenkins mode=0666 force=no
  tags: staging

- name: Add custom HTTPD configuration (in.relation.to rewrite rules)
  copy: src=etc/httpd/in.relation.to-rewriterules.confpart dest=/etc/httpd/conf.d/in.relation.to-rewriterules.confpart mode=0600 owner=root

- name: Add custom HTTPD configuration (in.relation.to)
  copy: src=etc/httpd/in.relation.to.conf dest=/etc/httpd/conf.d/in.relation.to.conf mode=0600 owner=root

- name: Add custom HTTPD configuration (staging.in.relation.to)
  copy: src=etc/httpd/staging-in.relation.to.conf dest=/etc/httpd/conf.d/staging-in.relation.to.conf mode=0600 owner=root
  tags: staging

- name: Add custom HTTPD configuration (staging.hibernate.org)
  copy: src=etc/httpd/staging-hibernate.org.conf dest=/etc/httpd/conf.d/staging-hibernate.org.conf mode=0600 owner=root
  tags: staging

- name: Add custom HTTPD configuration (staging.beanvalidation.org)
  copy: src=etc/httpd/staging-beanvalidation.org.conf dest=/etc/httpd/conf.d/staging-beanvalidation.org.conf mode=0600 owner=root
  tags: staging

- name: Add custom HTTPD configuration (blog.hibernate.org)
  copy: src=etc/httpd/blog.hibernate.org.conf dest=/etc/httpd/conf.d/blog.hibernate.org.conf mode=0600 owner=root

# Doesn't currently work because we're using an unregistered RHEL for some reason,
# and repos containing necessary dependencies are disabled
#- name: Install the latest version of Let's Encrypt's "certbot", using dnf
#  dnf:
#    name: ['certbot', 'certbot-apache']
#    state: latest

- name: Obtain certificates for in.relation.to using Let's Encrypt
  shell: sudo certbot certonly --apache -d in.relation.to
  args:
    creates: /etc/letsencrypt/live/in.relation.to

- name: Obtain certificates for staging.in.relation.to using Let's Encrypt
  shell: sudo certbot certonly --apache -d staging.in.relation.to
  args:
    creates: /etc/letsencrypt/live/staging.in.relation.to

- name: Obtain certificates for staging.hibernate.org using Let's Encrypt
  shell: sudo certbot certonly --apache -d staging.hibernate.org
  args:
    creates: /etc/letsencrypt/live/staging.hibernate.org

- name: Obtain certificates for blog.hibernate.org using Let's Encrypt
  shell: sudo certbot certonly --apache -d blog.hibernate.org
  args:
    creates: /etc/letsencrypt/live/blog.hibernate.org

- name: Ensure Let's encrypt certificates get renewed
  cron:
    name: "Renew let's encrypt certificates"
    minute: "0"
    hour: "0,12"
    job: "python -c 'import random; import time; time.sleep(random.random() * 3600)' && certbot renew"

- name: Ensure Apache HTTPD is started now, and again on startup
  service: name=httpd enabled=yes state=restarted
  tags:
    - staging
